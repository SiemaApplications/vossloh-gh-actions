name: MCUboot compilation

on:
  workflow_call:
    inputs:
      board-root-dir:
        description: 'Path to custom boards directory passed to --board-root option'
        required: false
        type: string
      key-file:
        description: 'Path where content of secret signing key is stored'
        required: true
        type: string
      twister-outdir:
        description: 'Twister output directory'
        required: false
        type: string
        default: "twister-out"
      tests-names:
        description: 'Space separated list of test case name to build'
        required: true
        type: string
      fallback-key-file:
        description: 'Key to use as fallback if signing-key is not available (action run from fork)'
        required: false
        type: string

    secrets:
      signing-key:
        description: 'Content of PEM key for which public part is stored in MCUboot firmware'
        required: true

    outputs:
      mcuboot-progfiles:
        description: 'Artifact name containing mcuboot programming files for each bank.'
        value: ${{ jobs.sreccat.outputs.artifacts-names }}

      binaries:
        description: 'Artifact name containing binaires, retrieved from compilation job.'
        value:  ${{ jobs.mcuboot_compil.outputs.binaries }}

      logs:
        description: 'Artifact name containing the build logs, retrieved from compilation job.'
        value: ${{ jobs.mcuboot_compil.outputs.logs }}


jobs:
  mcuboot_compil:
    uses: SiemaApplications/vossloh-gh-actions/.github/workflows/twister-signed-compilation.yml@fix_matrix_output
    with:
      app-dir: bootloader/mcuboot/boot/zephyr/
      board-root-dir: ${{ inputs.board-root-dir }}
      key-file: ${{ inputs.key-file }}
      twister-outdir: ${{ inputs.twister-outdir }}
      tests-names: ${{ inputs.tests-names }}
      fallback-key-file: ${{ inputs.fallback-key-file }}
    secrets:
      signing-key: ${{ secrets.signing-key }}

  sreccat:
    runs-on: ubuntu-latest
    name: MCUboot files for stm32h7 banks
    needs:
      - mcuboot_compil
    strategy:
      matrix:
        mcuboot: ${{ fromJson(needs.mcuboot_compil.outputs.binary-list) }}
    env:
      ARTIFACT_SUFFIX: '-mcuboot-progfiles'
    outputs:
      artifacts-names: ${{ steps.matrix-artifacts-names.outputs.artifacts }}

    steps:
      - name: install srec_cat
        run: sudo apt-get install -y srecord

      - name: Get MCUboot binaries
        uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ needs.mcuboot_compil.outputs.binaries }}

      - name: ':toolbox: Show artifacts'
        run: |
          find .
          echo "---------"
          echo "This job process ${{ matrix.mcuboot }}"

      - name: Get Board Name
        id: board-name
        run: |
          board="$(echo ${{ matrix.mcuboot }} | cut -d '/' -f 2)"
          echo "board=${board}" >> $GITHUB_OUTPUT

      - name: MCUboot STM32 H7 banks
        id: mcuboot-stm32h7-banks
        uses: SiemaApplications/vossloh-gh-actions/mcuboot/stm32h7-banks@fix_matrix_output
        with:
          mcuboot-binfile: ${{ matrix.mcuboot }}
          board-name: ${{ steps.board-name.outputs.board }}

      - name: Artifact name
        id: artifact-name
        run: |
          artifact_name=${{ steps.board-name.outputs.board }}${ARTIFACT_SUFFIX}
          echo "artifact_name=${artifact_name}"
          echo "artifact_name=${artifact_name}" >> $GITHUB_OUTPUT

      # It is not yet possible to get each output of matrix jobs
      # https://github.com/actions/runner/pull/2477
      # Although the PR is merged in, some server side dev is required and the team responsible for this have been fired
      # https://github.com/actions/runner/pull/2477#issuecomment-1501003600
      # This steps compute artifacts names across the job matrix.
      - name: Artifacts Names across Matrix
        id: matrix-artifacts-names
        run: |
          artifacts=""
          for binary in $(echo ${{ needs.mcuboot_compil.outputs.binary-list }} | jq -r '.[]'); do
            board="$(echo ${binary} | cut -d '/' -f 2)"
            artifact_name="${board}${ARTIFACT_SUFFIX}"
            artifacts="${artifacts} ${artifact_name}"
          done
          echo "artifacts=${artifacts}" | tee -a $GITHUB_OUTPUT

      - name: Upload MCUboot Binaries
        uses: actions/upload-artifact@v3
        with:
          retention-days: 7
          name: ${{ steps.artifact-name.outputs.artifact_name }}
          path: |
            ${{ steps.mcuboot-stm32h7-banks.outputs.mcuboot-bank1-hexfile }}
            ${{ steps.mcuboot-stm32h7-banks.outputs.mcuboot-bank2-hexfile }}
            ${{ steps.mcuboot-stm32h7-banks.outputs.mcuboot-banks-hexfile }}
            ${{ steps.mcuboot-stm32h7-banks.outputs.mcuboot-binfile }}
            ${{ steps.mcuboot-stm32h7-banks.outputs.md5sum-file }}
