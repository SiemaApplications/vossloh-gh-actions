name: MCUboot compilation

on:
  workflow_call:
    inputs:
      board-root-dir:
        description: 'Path to custom boards directory passed to --board-root option'
        required: false
        type: string
      key-file:
        description: 'Path where content of secret signing key is stored'
        required: true
        type: string
      twister-outdir:
        description: 'Twister output directory'
        required: false
        type: string
        default: "twister-out"
      tests-names:
        description: 'Semicolon separated list of test case name to build'
        required: true
        type: string

    secrets:
      signing-key:
        description: 'Content of PEM key for which public part is stored in MCUboot firmware'
        required: true

jobs:
  mcuboot_compilation_job:
    runs-on: ubuntu-latest
    container: ghcr.io/siemaapplications/zephyr-arm-build:v0.0.3
    steps:
      - name: Get Repository Name
        id: get-repo-name
        run: |
          repo_name=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          echo "Repository: ${{ github.repository }}"
          echo "Repository Name: ${repo_name}"
          echo "repo_name=${repo_name}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{ steps.get-repo-name.outputs.repo_name }}

      - name: Cache West Module
        uses: actions/cache@v3
        env:
          cache-name: cache-west-modules
        with:
          path: |
            bootloader/
            modules/
            tools/
            zephyr/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('${{ steps.get-repo-name.outputs.repo_name }}/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init and Update
        run: |
          west init -l ${{ steps.get-repo-name.outputs.repo_name }}
          west update --narrow --fetch-opt=--depth=1

      # Avoid leaking the private key on the command line
      - name: Get Signing Key
        shell: python
        env:
          MCUBOOT_KEY: ${{ secrets.signing-key }}
          KEY_FILE: ${{ inputs.key-file }}
        run: |
          import os
          key = os.environ.get('MCUBOOT_KEY')
          key_file = os.environ.get('KEY_FILE')
          with open(key_file, 'w', encoding='utf-8') as outfile:
              outfile.write("%s" % (key))

      - name: Twister args
        id: twister-args
        run: |
          if [ -n "${{ inputs.board-root-dir }}" ]; then
            echo "board_root=--board-root ${{ inputs.board-root-dir }}" >> $GITHUB_OUTPUT
          else
            echo "board_root=" >> $GITHUB_OUTPUT
          fi
          echo "outdir=--outdir ${{ inputs.twister-outdir }}" >> $GITHUB_OUTPUT
          OLD_IFS="${IFS}"
          IFS=";"
          testargs=""
          for t in '"${{ inputs.tests-names }}"'; do
            testargs="${testargs} --test '${t}'"
          done
          IFS="${OLD_IFS}"
          echo "testargs=${testargs}" >> $GITHUB_OUTPUT

      - name: MCUBoot Compilation
        run: |
          ./zephyr/scripts/twister ${{ steps.twister-args.outputs.board_root }} \
            ${{ steps.twister-args.outputs.outdir }} \
            --testsuite-root bootloader/mcuboot/boot/zephyr/ \
            ${{ steps.twister-args.outputs.testargs }}

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          retention-days: 7
          name: twister_mcuboot_build_logs
          path: |
            ${{ inputs.twister-outdir }}/**/build.log

      - name: Upload MCUboot Binaries
        uses: actions/upload-artifact@v3
        with:
          retention-days: 7
          name: mcuboot_binaries
          path: |
            ${{ inputs.twister-outdir }}/**/zephyr.bin
            ${{ inputs.twister-outdir }}/**/zephyr.elf
            ${{ inputs.twister-outdir }}/**/zephyr.hex

      - name: Check MCuboot Twister Results
        uses: SiemaApplications/vossloh-gh-actions/twister-analysis@main
        with:
          twister-result-file: ${{ inputs.twister-outdir }}/twister.json

